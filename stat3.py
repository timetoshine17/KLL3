import re
import torch
import pandas as pd

# 1) Î°úÍ∑∏ Î¨∏ÏûêÏó¥ÏùÑ Ïó¨Í∏∞Ïóê Î∂ôÏó¨ÎÑ£ÏúºÏÑ∏Ïöî:
log = """
üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20210601.txt
‚úÖ Î¨∏Ïû• Ïàò: 11
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([11, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.2708, 0.2664, 0.2709, 0.2320, 0.2172, 0.7811, 0.2514, 0.2208,
         0.2496, 0.2393],
        [0.2708, 1.0000, 0.7536, 0.6781, 0.7641, 0.7290, 0.2586, 0.6132, 0.7056,
         0.6409, 0.5947],
        [0.2664, 0.7536, 1.0000, 0.7366, 0.6922, 0.6839, 0.2621, 0.5432, 0.6617,
         0.6110, 0.6102],
        [0.2709, 0.6781, 0.7366, 1.0000, 0.6404, 0.7117, 0.2611, 0.4984, 0.7059,
         0.6460, 0.6202],
        [0.2320, 0.7641, 0.6922, 0.6404, 1.0000, 0.6691, 0.2167, 0.5004, 0.6216,
         0.6032, 0.5858],
        [0.2172, 0.7290, 0.6839, 0.7117, 0.6691, 1.0000, 0.2274, 0.5670, 0.7159,
         0.6032, 0.6094],
        [0.7811, 0.2586, 0.2621, 0.2611, 0.2167, 0.2274, 1.0000, 0.2690, 0.2387,
         0.2690, 0.2704],
        [0.2514, 0.6132, 0.5432, 0.4984, 0.5004, 0.5670, 0.2690, 1.0000, 0.5602,
         0.5405, 0.5408],
        [0.2208, 0.7056, 0.6617, 0.7059, 0.6216, 0.7159, 0.2387, 0.5602, 1.0000,
         0.6640, 0.6248],
        [0.2496, 0.6409, 0.6110, 0.6460, 0.6032, 0.6032, 0.2690, 0.5405, 0.6640,
         1.0000, 0.6283],
        [0.2393, 0.5947, 0.6102, 0.6202, 0.5858, 0.6094, 0.2704, 0.5408, 0.6248,
         0.6283, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20210901.txt
‚úÖ Î¨∏Ïû• Ïàò: 8
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([8, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.5752, 0.5888, 0.5626, 0.5281, 0.4813, 0.5069, 0.5062],
        [0.5752, 1.0000, 0.6274, 0.5816, 0.5528, 0.5303, 0.6375, 0.5329],
        [0.5888, 0.6274, 1.0000, 0.6135, 0.5105, 0.4509, 0.4894, 0.4765],
        [0.5626, 0.5816, 0.6135, 1.0000, 0.6407, 0.5478, 0.5828, 0.5441],
        [0.5281, 0.5528, 0.5105, 0.6407, 1.0000, 0.6836, 0.7666, 0.6687],
        [0.4813, 0.5303, 0.4509, 0.5478, 0.6836, 1.0000, 0.6531, 0.5562],
        [0.5069, 0.6375, 0.4894, 0.5828, 0.7666, 0.6531, 1.0000, 0.6594],
        [0.5062, 0.5329, 0.4765, 0.5441, 0.6687, 0.5562, 0.6594, 1.0000]])

üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20211101.txt
‚úÖ Î¨∏Ïû• Ïàò: 9
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([9, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.2680, 0.2603, 0.2695, 0.2647, 0.7488, 0.2367, 0.2605, 0.2145],
        [0.2680, 1.0000, 0.7181, 0.6243, 0.5577, 0.2989, 0.3894, 0.5146, 0.4835],
        [0.2603, 0.7181, 1.0000, 0.5914, 0.6383, 0.2886, 0.3804, 0.4967, 0.4256],
        [0.2695, 0.6243, 0.5914, 1.0000, 0.5448, 0.2999, 0.3411, 0.3643, 0.4146],
        [0.2647, 0.5577, 0.6383, 0.5448, 1.0000, 0.3056, 0.4271, 0.4776, 0.5568],
        [0.7488, 0.2989, 0.2886, 0.2999, 0.3056, 1.0000, 0.2356, 0.2744, 0.2483],
        [0.2367, 0.3894, 0.3804, 0.3411, 0.4271, 0.2356, 1.0000, 0.6106, 0.5533],
        [0.2605, 0.5146, 0.4967, 0.3643, 0.4776, 0.2744, 0.6106, 1.0000, 0.6151],
        [0.2145, 0.4835, 0.4256, 0.4146, 0.5568, 0.2483, 0.5533, 0.6151, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20220601.txt
‚úÖ Î¨∏Ïû• Ïàò: 9
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([9, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.2617, 0.2666, 0.3420, 0.2464, 0.7811, 0.3053, 0.2756, 0.2556],
        [0.2617, 1.0000, 0.5590, 0.4863, 0.6046, 0.2693, 0.4632, 0.4587, 0.4278],
        [0.2666, 0.5590, 1.0000, 0.6847, 0.5917, 0.2857, 0.3865, 0.3461, 0.3099],
        [0.3420, 0.4863, 0.6847, 1.0000, 0.5127, 0.3792, 0.3308, 0.3509, 0.2645],
        [0.2464, 0.6046, 0.5917, 0.5127, 1.0000, 0.2726, 0.3932, 0.4113, 0.3787],
        [0.7811, 0.2693, 0.2857, 0.3792, 0.2726, 1.0000, 0.2740, 0.2987, 0.2512],
        [0.3053, 0.4632, 0.3865, 0.3308, 0.3932, 0.2740, 1.0000, 0.7112, 0.7005],
        [0.2756, 0.4587, 0.3461, 0.3509, 0.4113, 0.2987, 0.7112, 1.0000, 0.6884],
        [0.2556, 0.4278, 0.3099, 0.2645, 0.3787, 0.2512, 0.7005, 0.6884, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20220902.txt
‚úÖ Î¨∏Ïû• Ïàò: 8
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([8, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.2313, 0.2366, 0.2292, 0.7811, 0.2335, 0.2773, 0.2437],
        [0.2313, 1.0000, 0.7156, 0.7683, 0.2346, 0.7988, 0.5956, 0.5009],
        [0.2366, 0.7156, 1.0000, 0.7601, 0.2169, 0.7497, 0.5649, 0.4703],
        [0.2292, 0.7683, 0.7601, 1.0000, 0.2309, 0.7856, 0.6225, 0.5134],
        [0.7811, 0.2346, 0.2169, 0.2309, 1.0000, 0.2337, 0.2785, 0.2362],
        [0.2335, 0.7988, 0.7497, 0.7856, 0.2337, 1.0000, 0.6709, 0.6134],
        [0.2773, 0.5956, 0.5649, 0.6225, 0.2785, 0.6709, 1.0000, 0.6220],
        [0.2437, 0.5009, 0.4703, 0.5134, 0.2362, 0.6134, 0.6220, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20221101.txt
‚úÖ Î¨∏Ïû• Ïàò: 8
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([8, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.2828, 0.3056, 0.3119, 0.7811, 0.2630, 0.2771, 0.2763],
        [0.2828, 1.0000, 0.5915, 0.5401, 0.3084, 0.6295, 0.6650, 0.6234],
        [0.3056, 0.5915, 1.0000, 0.8502, 0.3140, 0.4007, 0.7759, 0.7308],
        [0.3119, 0.5401, 0.8502, 1.0000, 0.3166, 0.3827, 0.6963, 0.7222],
        [0.7811, 0.3084, 0.3140, 0.3166, 1.0000, 0.2690, 0.2867, 0.2811],
        [0.2630, 0.6295, 0.4007, 0.3827, 0.2690, 1.0000, 0.5755, 0.5006],
        [0.2771, 0.6650, 0.7759, 0.6963, 0.2867, 0.5755, 1.0000, 0.7664],
        [0.2763, 0.6234, 0.7308, 0.7222, 0.2811, 0.5006, 0.7664, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20230601.txt
‚úÖ Î¨∏Ïû• Ïàò: 10
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([10, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.3237, 0.2741, 0.3022, 0.2562, 0.7811, 0.2343, 0.2340, 0.2827,
         0.2753],
        [0.3237, 1.0000, 0.6165, 0.5926, 0.6394, 0.3204, 0.4389, 0.5204, 0.5071,
         0.4888],
        [0.2741, 0.6165, 1.0000, 0.5651, 0.5317, 0.2886, 0.4517, 0.5769, 0.5475,
         0.5593],
        [0.3022, 0.5926, 0.5651, 1.0000, 0.7093, 0.3069, 0.4022, 0.4540, 0.4369,
         0.5035],
        [0.2562, 0.6394, 0.5317, 0.7093, 1.0000, 0.2202, 0.3479, 0.4652, 0.4142,
         0.5043],
        [0.7811, 0.3204, 0.2886, 0.3069, 0.2202, 1.0000, 0.2679, 0.2204, 0.2913,
         0.2935],
        [0.2343, 0.4389, 0.4517, 0.4022, 0.3479, 0.2679, 1.0000, 0.6137, 0.5623,
         0.6319],
        [0.2340, 0.5204, 0.5769, 0.4540, 0.4652, 0.2204, 0.6137, 1.0000, 0.6269,
         0.6129],
        [0.2827, 0.5071, 0.5475, 0.4369, 0.4142, 0.2913, 0.5623, 0.6269, 1.0000,
         0.7137],
        [0.2753, 0.4888, 0.5593, 0.5035, 0.5043, 0.2935, 0.6319, 0.6129, 0.7137,
         1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20230901.txt
‚úÖ Î¨∏Ïû• Ïàò: 8
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([8, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.7720, 0.6359, 0.7358, 0.6747, 0.4453, 0.7323, 0.7359],
        [0.7720, 1.0000, 0.7682, 0.7994, 0.6980, 0.4967, 0.7919, 0.7647],
        [0.6359, 0.7682, 1.0000, 0.7351, 0.6298, 0.4767, 0.6672, 0.7419],
        [0.7358, 0.7994, 0.7351, 1.0000, 0.7695, 0.4896, 0.7692, 0.7925],
        [0.6747, 0.6980, 0.6298, 0.7695, 1.0000, 0.6113, 0.7425, 0.7484],
        [0.4453, 0.4967, 0.4767, 0.4896, 0.6113, 1.0000, 0.6214, 0.5172],
        [0.7323, 0.7919, 0.6672, 0.7692, 0.7425, 0.6214, 1.0000, 0.7522],
        [0.7359, 0.7647, 0.7419, 0.7925, 0.7484, 0.5172, 0.7522, 1.0000]])


üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë: 20231101.txt
‚úÖ Î¨∏Ïû• Ïàò: 8
‚úÖ ÏûÑÎ≤†Îî© shape: torch.Size([8, 1024])
üß† Ïú†ÏÇ¨ÎèÑ ÌñâÎ†¨:
tensor([[1.0000, 0.7534, 0.5743, 0.5540, 0.5957, 0.4324, 0.4397, 0.5138],
        [0.7534, 1.0000, 0.5503, 0.5593, 0.5302, 0.4320, 0.4046, 0.4605],
        [0.5743, 0.5503, 1.0000, 0.7068, 0.5872, 0.5942, 0.5956, 0.4983],
        [0.5540, 0.5593, 0.7068, 1.0000, 0.6774, 0.5104, 0.5017, 0.4351],
        [0.5957, 0.5302, 0.5872, 0.6774, 1.0000, 0.6447, 0.5840, 0.6405],
        [0.4324, 0.4320, 0.5942, 0.5104, 0.6447, 1.0000, 0.6183, 0.5629],
        [0.4397, 0.4046, 0.5956, 0.5017, 0.5840, 0.6183, 1.0000, 0.6535],
        [0.5138, 0.4605, 0.4983, 0.4351, 0.6405, 0.5629, 0.6535, 1.0000]])
"""

matches = re.findall(
    r'üìÑ ÌååÏùº Ï≤òÎ¶¨ Ï§ë:\s*(\d+)\.txt[\s\S]+?tensor\(\[\[(.*?)\]\]\)',
    log, re.DOTALL
)
print("Îß§Ïπ≠Îêú Î∏îÎ°ù Ïàò:", len(matches))
for idx, m in enumerate(matches, 1):
    print(f"  Î∏îÎ°ù {idx}: ÌååÏùº {m[0]}")

# Í∑∏Îã§Ïùå Î∏îÎ°ùÏù¥ Ï†úÎåÄÎ°ú Ïû°ÌòîÎã§Î©¥, ÏïÑÎûò ÏΩîÎìúÎ°ú ÌèâÍ∑† Í≥ÑÏÇ∞
rows = []
for file_id, block in matches:
    row_strs = re.findall(r'\[([^\]]+)\]', block)
    mat_rows = [[float(x) for x in re.findall(r'\d+(?:\.\d+)?', r)] for r in row_strs]
    mat = torch.tensor(mat_rows)
    n = mat.size(0)
    mean_sim = ((mat.sum() - mat.trace()) / (n * (n - 1))).item()
    rows.append({'file': file_id, 'mean_sim': mean_sim})

df = pd.DataFrame(rows)
print(df)